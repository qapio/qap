
class NodeMeta {
  name: String?
}

class NodePosition {
  X: Number = 0
  Y: Number = 0
}

typealias Placement = "top" | "left" | "right" | "bottom"

open class Node {
  Type: String = "node"
  Id: String
  Content: String?
  Meta: NodeMeta = new NodeMeta {

  }
  Position: NodePosition = new NodePosition {

  }
  OutputPlacement: Placement?
  InputPlacement: Placement?
}

class Qap extends Node {

}

class Component extends Node {
  Type: String = "contentOnly"
}

class Edge {
  From: String
  To: String
}

class NodeSettings {
  Class: List<String>
}

class EdgeSettings {
  Class: List<String>
}

class Settings {
  Class: List<String>
  Minimap: Boolean = true
  Controls: Boolean = true
  Node: NodeSettings
  Edge: EdgeSettings
}

class Props {
  Settings: Settings
  Nodes: List<Node>
  Edges: List<Edge>
}