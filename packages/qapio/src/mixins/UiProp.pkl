
class TailwindProps {
  Input: String
  Output: String
  Content: List<String> = List()
}

open class Component {
  fixed Namespace: String = getClass().toString().split("#").first
  fixed Type: String = getClass().toString().split("#").last
}

class Container extends Component {
  ClassNames: List<String>
  Id: String?
  Component: Component
}

class Jsx extends Component {
  Path: String
}

open class Uri extends Component {
  Path: String
}

typealias ComponentsType = Mapping<String, Component | Any>

class Page {
  Label: String?
  Icon: String
  Url: String
}

typealias PagesType = Mapping<String, Page>

class Props {
  Tailwind: TailwindProps?
  Index: String = "/"
  Components: ComponentsType
  Pages: PagesType
  Stylesheets: List<String(endsWith(".css"))> = List()
}