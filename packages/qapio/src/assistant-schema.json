{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Assistant Definition Schema (5-part)",
  "type": "object",
  "properties": {
    "assistant": {
      "type": "object",
      "properties": {
        "identity": {
          "type": "object",
          "properties": {
            "name": { "type": "string", "description": "Assistant's name" },
            "role": { "type": "string", "description": "Persona / role description" },
            "voice_tone": {
              "type": "string",
              "enum": ["formal", "casual", "empathetic", "technical", "neutral"],
              "description": "Tone of communication"
            }
          },
          "required": ["name", "role"]
        },
        "purpose": {
          "type": "object",
          "properties": {
            "core_objective": { "type": "string", "description": "Main goal of the assistant" },
            "domain_scope": {
              "type": "array",
              "items": { "type": "string" },
              "description": "Areas of knowledge or operation"
            },
            "value_proposition": { "type": "string", "description": "Unique value provided" }
          },
          "required": ["core_objective"]
        },
        "capabilities": {
          "type": "object",
          "properties": {
            "functions": {
              "type": "array",
              "items": { "type": "string" },
              "description": "Core functions of the assistant"
            },
            "interaction_modes": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["text", "voice", "multimodal", "api"]
              },
              "description": "Supported modes of interaction"
            },
            "integrations": {
              "type": "object",
              "properties": {
                "data_sources": { "type": "array", "items": { "type": "string" } },
                "output_formats": { "type": "array", "items": { "type": "string" } }
              }
            },
            "knowledge_context": {
              "type": "object",
              "properties": {
                "knowledge_base": { "type": "string" },
                "context_awareness": { "type": "string" },
                "update_mechanism": { "type": "string" }
              }
            }
          }
        },
        "interaction_model": {
          "type": "object",
          "properties": {
            "input_handling": {
              "type": "array",
              "items": { "type": "string" },
              "description": "How it accepts input"
            },
            "output_style": { "type": "string", "description": "Style of responses" },
            "conversation_flow": {
              "type": "array",
              "items": { "type": "string" },
              "description": "Expected conversation steps"
            },
            "boundaries": {
              "type": "object",
              "properties": {
                "dos": { "type": "array", "items": { "type": "string" } },
                "donts": { "type": "array", "items": { "type": "string" } },
                "ethical_guardrails": { "type": "string" },
                "fallback_behavior": { "type": "string" }
              }
            }
          }
        },
        "operations": {
          "type": "object",
          "properties": {
            "personality": {
              "type": "object",
              "properties": {
                "traits": { "type": "array", "items": { "type": "string" } },
                "adaptability": { "type": "string" }
              }
            },
            "performance_metrics": {
              "type": "array",
              "items": { "type": "string" }
            },
            "failure_modes": {
              "type": "array",
              "items": { "type": "string" }
            },
            "escalation_paths": { "type": "string" }
          }
        }
      },
      "required": ["identity", "purpose"]
    }
  }
}
